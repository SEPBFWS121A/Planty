##### GLOBAL

# Allow all origins in CORS check
# Running this in production is a security risk!
quarkus.http.cors=true
quarkus.http.cors.origins=/.*/


##### DEV MODE

# listen on all interfaces
%dev.quarkus.http.host=0.0.0.0

# datasource configuration
%dev.quarkus.datasource.db-kind = postgresql
%dev.quarkus.datasource.username = quarkus
%dev.quarkus.datasource.password = V%TFwzTBFx#tM9bLxx#&YTpY6!5g@d
%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://planty-database:5432/planty

# drop and create the database at startup (use `update` to only update the schema)
%dev.quarkus.hibernate-orm.database.generation=drop-and-create


##### TEST MODE

# listen on all interfaces
%test.quarkus.http.host=0.0.0.0

# datasource configuration
%test.quarkus.datasource.db-kind = postgresql
%test.quarkus.datasource.username =
%test.quarkus.datasource.password = 
%test.quarkus.datasource.jdbc.url = jdbc:postgresql://:/

# update the database schema at startup
%test.quarkus.hibernate-orm.database.generation=update


##### PROD MODE

# listen on all interfaces
%prod.quarkus.http.host=0.0.0.0

# datasource configuration
%prod.quarkus.datasource.db-kind = postgresql
%prod.quarkus.datasource.username =
%prod.quarkus.datasource.password = 
%prod.quarkus.datasource.jdbc.url = jdbc:postgresql://:/

# update the database schema at startup
%prod.quarkus.hibernate-orm.database.generation=update
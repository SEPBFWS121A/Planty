##### GLOBAL

# Listen on all interfaces
quarkus.http.host=0.0.0.0
quarkus.http.port=8080
quarkus.http.test-port=8081

# Allow all origins in CORS check
# Running this in production is a security risk!
quarkus.http.cors=true
quarkus.http.cors.origins=/.*/


##### DEV MODE

# datasource configuration
%dev.quarkus.datasource.db-kind = postgresql
%dev.quarkus.datasource.username = quarkus
%dev.quarkus.datasource.password = V%TFwzTBFx#tM9bLxx#&YTpY6!5g@d
%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/planty

# drop and create the database at startup
%dev.quarkus.hibernate-orm.database.generation=drop-and-create


##### TEST MODE

# datasource configuration

%test.quarkus.datasource.db-kind = postgresql
%test.quarkus.datasource.username = quarkus
%test.quarkus.datasource.password = V%TFwzTBFx#tM9bLxx#&YTpY6!5g@d
%test.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/planty

# drop and create the database at startup (use `update` to only update the schema)
%test.quarkus.hibernate-orm.database.generation=drop-and-create


##### PROD MODE

# database properties will be set by environment variables

# datasource configuration
%prod.quarkus.datasource.db-kind = ${PLANTY_DATABASE_TYPE_PROD:postgresql}
%prod.quarkus.datasource.username = ${PLANTY_DATABASE_USER_PROD:quarkus}
%prod.quarkus.datasource.password = ${PLANTY_DATABASE_PASSWORD_PROD}
%prod.quarkus.datasource.jdbc.url = jdbc:${PLANTY_DATABASE_TYPE_PROD:postgresql}://${PLANTY_DATABASE_HOST_PROD}:${PLANTY_DATABASE_PORT_PROD:5432}/${PLANTY_DATABASE_NAME_PROD:planty}

# update the database schema at startup
%prod.quarkus.hibernate-orm.database.generation=update